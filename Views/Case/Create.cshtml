@model CanLove_Backend.ViewModels.CaseCreateViewModel

@{
    ViewData["Title"] = "新增個案";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2>
        <i class="bi bi-plus-circle me-2"></i>新增個案
    </h2>
    <a href="@Url.Action("Index", "Case")" class="btn btn-outline-secondary">
        <i class="bi bi-arrow-left me-1"></i>返回列表
    </a>
</div>

<div class="card">
    <div class="card-body">
        <form asp-action="Create" method="post">
            <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>
            
            <div class="row">
                <div class="col-md-6">
                    <div class="mb-3">
                        <label asp-for="Case.Name" class="form-label">姓名 <span class="text-danger">*</span></label>
                        <input asp-for="Case.Name" class="form-control" placeholder="請輸入姓名" />
                        <span asp-validation-for="Case.Name" class="text-danger"></span>
                    </div>
                </div>
                
                <div class="col-md-6">
                    <div class="mb-3">
                        <label asp-for="Case.Gender" class="form-label">性別</label>
                        <select asp-for="Case.Gender" class="form-select">
                            <option value="">請選擇性別</option>
                            @foreach (var gender in Model.GenderOptions)
                            {
                                <option value="@gender.ValueCode">@gender.ValueName</option>
                            }
                        </select>
                        <span asp-validation-for="Case.Gender" class="text-danger"></span>
                    </div>
                </div>
            </div>
            
            <div class="row">
                <div class="col-md-6">
                    <div class="mb-3">
                        <label asp-for="Case.BirthDate" class="form-label">出生日期 <span class="text-danger">*</span></label>
                        <input asp-for="Case.BirthDate" type="date" class="form-control" />
                        <div class="form-text">目前選擇：@Model.Case.BirthDate.ToTaiwanDateString()</div>
                        <span asp-validation-for="Case.BirthDate" class="text-danger"></span>
                    </div>
                </div>
                
                <div class="col-md-6">
                    <div class="mb-3">
                        <label asp-for="Case.IdNumber" class="form-label">身分證字號 <span class="text-danger">*</span></label>
                        <input asp-for="Case.IdNumber" class="form-control" placeholder="請輸入身分證字號" />
                        <span asp-validation-for="Case.IdNumber" class="text-danger"></span>
                    </div>
                </div>
            </div>
            
            <div class="row">
                <div class="col-md-6">
                    <div class="mb-3">
                        <label asp-for="Case.Phone" class="form-label">電話</label>
                        <input asp-for="Case.Phone" class="form-control" placeholder="請輸入電話號碼" />
                        <span asp-validation-for="Case.Phone" class="text-danger"></span>
                    </div>
                </div>
                
                <div class="col-md-6">
                    <div class="mb-3">
                        <label asp-for="Case.Email" class="form-label">電子郵件</label>
                        <input asp-for="Case.Email" type="email" class="form-control" placeholder="請輸入電子郵件" />
                        <span asp-validation-for="Case.Email" class="text-danger"></span>
                    </div>
                </div>
            </div>
            
            <div class="row">
                <div class="col-md-4">
                    <div class="mb-3">
                        <label asp-for="Case.CityId" class="form-label">城市</label>
                        <select asp-for="Case.CityId" class="form-select" id="citySelect">
                            <option value="">請選擇城市</option>
                            @foreach (var city in Model.Cities)
                            {
                                <option value="@city.CityId" selected="@(city.CityId == Model.Case.CityId)">@city.CityName</option>
                            }
                        </select>
                        <span asp-validation-for="Case.CityId" class="text-danger"></span>
                    </div>
                </div>
                
                <div class="col-md-4">
                    <div class="mb-3">
                        <label asp-for="Case.DistrictId" class="form-label">區域</label>
                        <select asp-for="Case.DistrictId" class="form-select" id="districtSelect">
                            <option value="">請先選擇城市</option>
                        </select>
                        <span asp-validation-for="Case.DistrictId" class="text-danger"></span>
                    </div>
                </div>
                
                <div class="col-md-4">
                    <div class="mb-3">
                        <label asp-for="Case.SchoolId" class="form-label">學校</label>
                        <div class="input-group">
                            <select asp-for="Case.SchoolId" class="form-select" id="schoolSelect">
                                <option value="">請選擇學校</option>
                                @foreach (var school in Model.Schools)
                                {
                                     <option value="@school.SchoolId">@school.SchoolName</option>
                                }
                            </select>
                            <button type="button" class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#addSchoolModal">
                                <i class="bi bi-plus-circle">新增學校</i>
                            </button>
                        </div>
                        <span asp-validation-for="Case.SchoolId" class="text-danger"></span>
                    </div>
                </div>
            </div>
            
            <div class="mb-3">
                <label asp-for="Case.Address" class="form-label">地址</label>
                <textarea asp-for="Case.Address" class="form-control" rows="2" placeholder="請輸入地址"></textarea>
                <span asp-validation-for="Case.Address" class="text-danger"></span>
            </div>
            
            <div class="mb-3">
                <label asp-for="Case.AssessmentDate" class="form-label">評估日期</label>
                <input asp-for="Case.AssessmentDate" type="date" class="form-control" />
                <span asp-validation-for="Case.AssessmentDate" class="text-danger"></span>
            </div>
            
            <div class="d-flex justify-content-end gap-2">
                <a href="@Url.Action("Index", "Case")" class="btn btn-secondary">
                    <i class="bi bi-x-circle me-1"></i>取消
                </a>
                <button type="submit" class="btn btn-primary">
                    <i class="bi bi-check-circle me-1"></i>儲存
                </button>
            </div>
        </form>
    </div>
</div>

<!-- 新增學校彈出視窗 -->
<div class="modal fade" id="addSchoolModal" tabindex="-1" aria-labelledby="addSchoolModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addSchoolModalLabel">新增學校</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="addSchoolForm">
                    <div class="mb-3">
                        <label for="newSchoolName" class="form-label">學校名稱</label>
                        <input type="text" class="form-control" id="newSchoolName" required>
                        <div class="invalid-feedback" id="schoolNameError"></div>
                    </div>
                    <div class="mb-3">
                        <label for="newSchoolType" class="form-label">學校類型</label>
                        <select class="form-select" id="newSchoolType" required>
                            <option value="">請選擇學校類型</option>
                            <option value="國小">國小</option>
                            <option value="國中">國中</option>
                            <option value="高中">高中</option>
                            <option value="大學">大學</option>
                            <option value="其他">其他</option>
                        </select>
                        <div class="invalid-feedback" id="schoolTypeError"></div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
                <button type="button" class="btn btn-primary" id="saveSchoolBtn">儲存</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // 載入區域的函數
        function loadDistricts(cityId) {
            const districtSelect = document.getElementById('districtSelect');
            
            // 清空區域選項
            districtSelect.innerHTML = '<option value="">請選擇區域</option>';
            
            if (cityId) {
                // 透過 AJAX 載入對應的區域
                fetch(`/api/address/districts/${cityId}`)
                    .then(response => response.json())
                    .then(data => {
                        data.forEach(district => {
                            const option = document.createElement('option');
                            option.value = district.districtId;
                            option.textContent = district.districtName;
                            districtSelect.appendChild(option);
                        });
                    })
                    .catch(error => {
                        console.error('載入區域失敗:', error);
                        alert('載入區域資料失敗，請重新整理頁面');
                    });
            }
        }

        // 城市和區域的連動選擇
        document.getElementById('citySelect').addEventListener('change', function() {
            loadDistricts(this.value);
        });

        // 頁面載入時，如果已經選擇了城市，就載入對應的區域
        document.addEventListener('DOMContentLoaded', function() {
            const citySelect = document.getElementById('citySelect');
            if (citySelect.value) {
                loadDistricts(citySelect.value);
            }
        });

        // 新增學校功能
        document.getElementById('saveSchoolBtn').addEventListener('click', function() {
            const schoolName = document.getElementById('newSchoolName').value.trim();
            const schoolType = document.getElementById('newSchoolType').value;
            
            // 清除之前的錯誤訊息
            clearSchoolFormErrors();
            
            // 驗證表單
            if (!schoolName) {
                showSchoolError('newSchoolName', '請輸入學校名稱');
                return;
            }
            
            if (!schoolType) {
                showSchoolError('newSchoolType', '請選擇學校類型');
                return;
            }
            
            // 發送 AJAX 請求新增學校
            fetch('/api/school', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify({
                    schoolName: schoolName,
                    schoolType: schoolType
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // 新增成功，將新學校加入下拉選單
                    const schoolSelect = document.getElementById('schoolSelect');
                    const newOption = document.createElement('option');
                    newOption.value = data.schoolId;
                    newOption.textContent = data.schoolName;
                    schoolSelect.appendChild(newOption);
                    
                    // 自動選擇新新增的學校
                    schoolSelect.value = data.schoolId;
                    
                    // 關閉彈出視窗
                    const modal = bootstrap.Modal.getInstance(document.getElementById('addSchoolModal'));
                    modal.hide();
                    
                    // 清空表單
                    document.getElementById('addSchoolForm').reset();
                    
                    // 顯示成功訊息
                    showAlert('success', data.message);
                } else {
                    showAlert('danger', data.message);
                }
            })
            .catch(error => {
                console.error('新增學校失敗:', error);
                showAlert('danger', '新增學校失敗，請稍後再試');
            });
        });
        
        // 清除學校表單錯誤訊息
        function clearSchoolFormErrors() {
            document.getElementById('schoolNameError').textContent = '';
            document.getElementById('schoolTypeError').textContent = '';
            document.getElementById('newSchoolName').classList.remove('is-invalid');
            document.getElementById('newSchoolType').classList.remove('is-invalid');
        }
        
        // 顯示學校表單錯誤訊息
        function showSchoolError(fieldId, message) {
            const field = document.getElementById(fieldId);
            const errorElement = document.getElementById(fieldId.replace('new', 'school').replace('Name', 'NameError').replace('Type', 'TypeError'));
            
            field.classList.add('is-invalid');
            errorElement.textContent = message;
        }
        
        // 顯示提示訊息
        function showAlert(type, message) {
            const alertDiv = document.createElement('div');
            alertDiv.className = `alert alert-${type} alert-dismissible fade show`;
            alertDiv.innerHTML = `
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            
            // 插入到頁面頂部
            const container = document.querySelector('.container');
            container.insertBefore(alertDiv, container.firstChild);
            
            // 3秒後自動消失
            setTimeout(() => {
                if (alertDiv.parentNode) {
                    alertDiv.remove();
                }
            }, 3000);
        }

    </script>
}
