// <auto-generated />
using System;
using CanLove_Backend.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CanLove_Backend.Migrations
{
    [DbContext(typeof(CanLoveDbContext))]
    partial class CanLoveDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("Chinese_PRC_CI_AS")
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CanLove_Backend.Data.Models.Audit.DataChangeLog", b =>
                {
                    b.Property<long>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("logID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("LogId"));

                    b.Property<DateTime?>("ChangedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("changed_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ChangedBy")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("changed_by");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("FieldName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("field_name");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("ip_address");

                    b.Property<string>("NewValue")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("new_value");

                    b.Property<string>("OldValue")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("old_value");

                    b.Property<string>("OperationType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("operation_type");

                    b.Property<string>("RecordId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("record_id");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("table_name");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UserAgent")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("user_agent");

                    b.HasKey("LogId")
                        .HasName("PK__DataChan__7839F62D88C723F6");

                    b.ToTable("DataChangeLog", (string)null);
                });

            modelBuilder.Entity("CanLove_Backend.Data.Models.Audit.UserActivityLog", b =>
                {
                    b.Property<long>("ActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("activityID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ActivityId"));

                    b.Property<string>("ActivityDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("activity_description");

                    b.Property<string>("ActivityType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("activity_type");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("ip_address");

                    b.Property<string>("TargetRecordId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("target_record_id");

                    b.Property<string>("TargetTable")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("target_table");

                    b.Property<string>("UserAgent")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("user_agent");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("user_id");

                    b.HasKey("ActivityId")
                        .HasName("PK__UserActi__0FC9CBCC3741A266");

                    b.ToTable("UserActivityLog", (string)null);
                });

            modelBuilder.Entity("CanLove_Backend.Data.Models.CaseDetails.CaseConsultationRecord", b =>
                {
                    b.Property<int>("ConsultationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("consultation_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConsultationId"));

                    b.Property<string>("CaseId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("caseID");

                    b.Property<string>("ConsultationContent")
                        .HasColumnType("ntext")
                        .HasColumnName("consultation_content");

                    b.Property<DateTime>("ConsultationDatetime")
                        .HasColumnType("datetime2")
                        .HasColumnName("consultation_datetime");

                    b.Property<int>("ConsultationMethodValueId")
                        .HasColumnType("int")
                        .HasColumnName("consultation_method_value_id");

                    b.Property<int>("ConsultationTargetValueId")
                        .HasColumnType("int")
                        .HasColumnName("consultation_target_value_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("deleted");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("deleted_by");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("ConsultationId")
                        .HasName("PK__CaseCons__650FE0FB57E0285C");

                    b.HasIndex("CaseId");

                    b.HasIndex("ConsultationMethodValueId");

                    b.HasIndex("ConsultationTargetValueId");

                    b.HasIndex(new[] { "ConsultationDatetime" }, "IX_CaseConsultationRecords_consultation_datetime");

                    b.ToTable("CaseConsultationRecords");
                });

            modelBuilder.Entity("CanLove_Backend.Data.Models.CaseDetails.CaseDetail", b =>
                {
                    b.Property<string>("CaseId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("caseID");

                    b.Property<string>("ContactName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("contact_name");

                    b.Property<string>("ContactPhone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("contact_phone");

                    b.Property<int?>("ContactRelationValueId")
                        .HasColumnType("int")
                        .HasColumnName("contact_relation_value_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("deleted");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("deleted_by");

                    b.Property<string>("FamilyStructureOtherDesc")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("family_structure_other_desc");

                    b.Property<int?>("FamilyStructureTypeId")
                        .HasColumnType("int")
                        .HasColumnName("family_structure_type_id");

                    b.Property<int?>("HelpExperienceValueId")
                        .HasColumnType("int")
                        .HasColumnName("help_experience_value_id");

                    b.Property<string>("HomePhone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("home_phone");

                    b.Property<DateOnly?>("MainCaregiverBirth")
                        .HasColumnType("date")
                        .HasColumnName("main_caregiver_birth");

                    b.Property<int?>("MainCaregiverEduValueId")
                        .HasColumnType("int")
                        .HasColumnName("main_caregiver_edu_value_id");

                    b.Property<string>("MainCaregiverId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("main_caregiver_id");

                    b.Property<string>("MainCaregiverJob")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("main_caregiver_job");

                    b.Property<int?>("MainCaregiverMarryStatusValueId")
                        .HasColumnType("int")
                        .HasColumnName("main_caregiver_marry_status_value_id");

                    b.Property<string>("MainCaregiverName")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("main_caregiver_name");

                    b.Property<string>("MainCaregiverRelation")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("main_caregiver_relation");

                    b.Property<string>("Note")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("note");

                    b.Property<int?>("ParentNationFatherId")
                        .HasColumnType("int")
                        .HasColumnName("parent_nation_father_id");

                    b.Property<int?>("ParentNationMotherId")
                        .HasColumnType("int")
                        .HasColumnName("parent_nation_mother_id");

                    b.Property<int?>("SourceValueId")
                        .HasColumnType("int")
                        .HasColumnName("source_value_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("CaseId")
                        .HasName("PK__CaseDeta__956FA6E927C7051B");

                    b.HasIndex("ContactRelationValueId");

                    b.HasIndex("FamilyStructureTypeId");

                    b.HasIndex("HelpExperienceValueId");

                    b.HasIndex("MainCaregiverEduValueId");

                    b.HasIndex("MainCaregiverMarryStatusValueId");

                    b.HasIndex("ParentNationFatherId");

                    b.HasIndex("ParentNationMotherId");

                    b.HasIndex("SourceValueId");

                    b.HasIndex(new[] { "CaseId" }, "IX_CaseDetail_caseID");

                    b.ToTable("CaseDetail", null, t =>
                        {
                            t.HasTrigger("TR_CaseDetail_UpdateTime");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("CanLove_Backend.Data.Models.CaseDetails.CaseEqemotionalEvaluation", b =>
                {
                    b.Property<string>("CaseId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("caseID");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("deleted");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("deleted_by");

                    b.Property<int?>("EqQ1")
                        .HasColumnType("int")
                        .HasColumnName("eq_q1");

                    b.Property<int?>("EqQ2")
                        .HasColumnType("int")
                        .HasColumnName("eq_q2");

                    b.Property<int?>("EqQ3")
                        .HasColumnType("int")
                        .HasColumnName("eq_q3");

                    b.Property<int?>("EqQ4")
                        .HasColumnType("int")
                        .HasColumnName("eq_q4");

                    b.Property<int?>("EqQ5")
                        .HasColumnType("int")
                        .HasColumnName("eq_q5");

                    b.Property<int?>("EqQ6")
                        .HasColumnType("int")
                        .HasColumnName("eq_q6");

                    b.Property<int?>("EqQ7")
                        .HasColumnType("int")
                        .HasColumnName("eq_q7");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("CaseId")
                        .HasName("PK__CaseEQem__956FA6E91D9170DF");

                    b.HasIndex(new[] { "CaseId" }, "IX_CaseEQemotionalEvaluation_caseID");

                    b.ToTable("CaseEQemotionalEvaluation", null, t =>
                        {
                            t.HasTrigger("TR_CaseEQemotionalEvaluation_UpdateTime");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("CanLove_Backend.Data.Models.CaseDetails.CaseFamilyMember", b =>
                {
                    b.Property<string>("CaseId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("caseID");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("deleted");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("deleted_by");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("description");

                    b.Property<int>("MemberTypeValueId")
                        .HasColumnType("int")
                        .HasColumnName("member_type_value_id");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasIndex("CaseId");

                    b.HasIndex("MemberTypeValueId");

                    b.ToTable("CaseFamilyMembers");
                });

            modelBuilder.Entity("CanLove_Backend.Data.Models.CaseDetails.CaseFamilyMemberNote", b =>
                {
                    b.Property<int>("NoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("note_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NoteId"));

                    b.Property<string>("CaseId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("caseID");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("deleted");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("deleted_by");

                    b.Property<string>("MemberName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("member_name");

                    b.Property<int>("MemberTypeValueId")
                        .HasColumnType("int")
                        .HasColumnName("member_type_value_id");

                    b.Property<string>("NoteContent")
                        .HasColumnType("ntext")
                        .HasColumnName("note_content");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("NoteId")
                        .HasName("PK__CaseFami__CEDD0FA4B2CD6ED0");

                    b.HasIndex("CaseId");

                    b.HasIndex("MemberTypeValueId");

                    b.ToTable("CaseFamilyMemberNotes");
                });

            modelBuilder.Entity("CanLove_Backend.Data.Models.CaseDetails.CaseFamilySpecialStatus", b =>
                {
                    b.Property<string>("CaseId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("caseID");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("deleted");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("deleted_by");

                    b.Property<string>("DisabilityIcfCode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("disability_icf_code");

                    b.Property<string>("LowIncomeCardNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("low_income_card_number");

                    b.Property<string>("OtherDescription")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("other_description");

                    b.Property<int>("StatusTypeValueId")
                        .HasColumnType("int")
                        .HasColumnName("status_type_value_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasIndex("CaseId");

                    b.HasIndex("StatusTypeValueId");

                    b.ToTable("CaseFamilySpecialStatus", (string)null);
                });

            modelBuilder.Entity("CanLove_Backend.Data.Models.CaseDetails.CaseFqeconomicStatus", b =>
                {
                    b.Property<string>("CaseId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("caseID");

                    b.Property<string>("CivilWelfareResources")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("civil_welfare_resources");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("deleted");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("deleted_by");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("description");

                    b.Property<string>("EconomicOverview")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("economic_overview");

                    b.Property<decimal?>("MonthlyExpense")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("monthly_expense");

                    b.Property<string>("MonthlyExpenseNote")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("monthly_expense_note");

                    b.Property<decimal?>("MonthlyIncome")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("monthly_income");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("WorkSituation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("work_situation");

                    b.HasKey("CaseId")
                        .HasName("PK__CaseFQec__956FA6E98584FE85");

                    b.HasIndex(new[] { "CaseId" }, "IX_CaseFQeconomicStatus_caseID");

                    b.ToTable("CaseFQeconomicStatus", null, t =>
                        {
                            t.HasTrigger("TR_CaseFQeconomicStatus_UpdateTime");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("CanLove_Backend.Data.Models.CaseDetails.CaseHqhealthStatus", b =>
                {
                    b.Property<int>("CaregiverId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("caregiver_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CaregiverId"));

                    b.Property<string>("CaregiverName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("caregiver_name");

                    b.Property<int>("CaregiverRoleValueId")
                        .HasColumnType("int")
                        .HasColumnName("caregiver_role_value_id");

                    b.Property<string>("CaseId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("caseID");

                    b.Property<string>("ChildCareStatusNote")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("child_care_status_note");

                    b.Property<byte?>("ChildCareStatusRating")
                        .HasColumnType("tinyint")
                        .HasColumnName("child_care_status_rating");

                    b.Property<string>("ChildHealthStatusNote")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("child_health_status_note");

                    b.Property<byte?>("ChildHealthStatusRating")
                        .HasColumnType("tinyint")
                        .HasColumnName("child_health_status_rating");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("deleted");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("deleted_by");

                    b.Property<string>("EmotionalExpressionNote")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("emotional_expression_note");

                    b.Property<byte?>("EmotionalExpressionRating")
                        .HasColumnType("tinyint")
                        .HasColumnName("emotional_expression_rating");

                    b.Property<string>("HealthStatusNote")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("health_status_note");

                    b.Property<byte?>("HealthStatusRating")
                        .HasColumnType("tinyint")
                        .HasColumnName("health_status_rating");

                    b.Property<bool?>("IsPrimary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("is_primary");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("CaregiverId")
                        .HasName("PK__CaseHQhe__F6A63A40A924AA99");

                    b.HasIndex("CaregiverRoleValueId");

                    b.HasIndex(new[] { "CaseId" }, "IX_CaseHQhealthStatus_caseID");

                    b.ToTable("CaseHQhealthStatus", null, t =>
                        {
                            t.HasTrigger("TR_CaseHQhealthStatus_UpdateTime");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("CanLove_Backend.Data.Models.CaseDetails.CaseIqacademicPerformance", b =>
                {
                    b.Property<string>("CaseId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("caseID");

                    b.Property<string>("AcademicPerformanceSummary")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("academic_performance_summary");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("deleted");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("deleted_by");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("CaseId")
                        .HasName("PK__CaseIQac__956FA6E94231541A");

                    b.HasIndex(new[] { "CaseId" }, "IX_CaseIQacademicPerformance_caseID");

                    b.ToTable("CaseIQacademicPerformance", null, t =>
                        {
                            t.HasTrigger("TR_CaseIQacademicPerformance_UpdateTime");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("CanLove_Backend.Data.Models.CaseDetails.CaseSocialWorkerContent", b =>
                {
                    b.Property<string>("CaseId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("caseID");

                    b.Property<string>("CaregiverChildInteractionNote")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("caregiver_child_interaction_note");

                    b.Property<byte?>("CaregiverChildInteractionRating")
                        .HasColumnType("tinyint")
                        .HasColumnName("caregiver_child_interaction_rating");

                    b.Property<string>("CaregiverFamilyInteractionNote")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("caregiver_family_interaction_note");

                    b.Property<byte?>("CaregiverFamilyInteractionRating")
                        .HasColumnType("tinyint")
                        .HasColumnName("caregiver_family_interaction_rating");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("deleted");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("deleted_by");

                    b.Property<string>("FamilyResourceAbilityNote")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("family_resource_ability_note");

                    b.Property<byte?>("FamilyResourceAbilityRating")
                        .HasColumnType("tinyint")
                        .HasColumnName("family_resource_ability_rating");

                    b.Property<string>("FamilySocialSupportNote")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("family_social_support_note");

                    b.Property<byte?>("FamilySocialSupportRating")
                        .HasColumnType("tinyint")
                        .HasColumnName("family_social_support_rating");

                    b.Property<string>("FamilyTreeImg")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("family_tree_img");

                    b.Property<string>("HouseCleanlinessNote")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("house_cleanliness_note");

                    b.Property<byte?>("HouseCleanlinessRating")
                        .HasColumnType("tinyint")
                        .HasColumnName("house_cleanliness_rating");

                    b.Property<string>("HouseSafetyNote")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("house_safety_note");

                    b.Property<byte?>("HouseSafetyRating")
                        .HasColumnType("tinyint")
                        .HasColumnName("house_safety_rating");

                    b.Property<int?>("ResidenceTypeValueId")
                        .HasColumnType("int")
                        .HasColumnName("residence_type_value_id");

                    b.Property<string>("SpecialCircumstancesDescription")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("special_circumstances_description");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("CaseId")
                        .HasName("PK__CaseSoci__956FA6E99FF2C225");

                    b.HasIndex("ResidenceTypeValueId");

                    b.ToTable("CaseSocialWorkerContent", (string)null);
                });

            modelBuilder.Entity("CanLove_Backend.Data.Models.CaseDetails.CaseSocialWorkerService", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("service_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceId"));

                    b.Property<string>("CaseId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("caseID");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("deleted");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("deleted_by");

                    b.Property<DateOnly?>("ServiceDate")
                        .HasColumnType("date")
                        .HasColumnName("service_date");

                    b.Property<string>("ServiceDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("service_description");

                    b.Property<string>("ServiceProvider")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("service_provider");

                    b.Property<int>("ServiceTypeValueId")
                        .HasColumnType("int")
                        .HasColumnName("service_type_value_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("ServiceId")
                        .HasName("PK__CaseSoci__3E0DB8AFBE5651FA");

                    b.HasIndex("CaseId");

                    b.HasIndex("ServiceTypeValueId");

                    b.ToTable("CaseSocialWorkerServices");
                });

            modelBuilder.Entity("CanLove_Backend.Data.Models.CaseDetails.FinalAssessmentSummary", b =>
                {
                    b.Property<string>("CaseId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("caseID");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("deleted");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("deleted_by");

                    b.Property<string>("EqSummary")
                        .HasColumnType("text")
                        .HasColumnName("eq_summary");

                    b.Property<string>("FqSummary")
                        .HasColumnType("text")
                        .HasColumnName("fq_summary");

                    b.Property<string>("HqSummary")
                        .HasColumnType("text")
                        .HasColumnName("hq_summary");

                    b.Property<string>("IqSummary")
                        .HasColumnType("text")
                        .HasColumnName("iq_summary");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("CaseId")
                        .HasName("PK__FinalAss__956FA6E9E622ECA0");

                    b.HasIndex(new[] { "CaseId" }, "IX_FinalAssessmentSummary_caseID");

                    b.ToTable("FinalAssessmentSummary", null, t =>
                        {
                            t.HasTrigger("TR_FinalAssessmentSummary_UpdateTime");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("CanLove_Backend.Data.Models.Core.Case", b =>
                {
                    b.Property<string>("CaseId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("caseID");

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("address");

                    b.Property<DateOnly?>("AssessmentDate")
                        .HasColumnType("date")
                        .HasColumnName("assessment_date");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date")
                        .HasColumnName("birth_date");

                    b.Property<int?>("CityId")
                        .HasColumnType("int")
                        .HasColumnName("city_id");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("Deleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("deleted");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("deleted_by");

                    b.Property<int?>("DistrictId")
                        .HasColumnType("int")
                        .HasColumnName("district_id");

                    b.Property<bool?>("DraftStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("draft_status");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Gender")
                        .HasMaxLength(2)
                        .HasColumnType("nchar(2)")
                        .HasColumnName("gender")
                        .IsFixedLength();

                    b.Property<string>("IdNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("id_number");

                    b.Property<bool?>("IsLocked")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("is_locked");

                    b.Property<DateTime?>("LockedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("locked_at");

                    b.Property<string>("LockedBy")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("locked_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("phone");

                    b.Property<string>("Photo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("photo");

                    b.Property<DateTime?>("ReviewedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("reviewed_at");

                    b.Property<string>("ReviewedBy")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("reviewed_by");

                    b.Property<int?>("SchoolId")
                        .HasColumnType("int")
                        .HasColumnName("school_id");

                    b.Property<DateTime?>("SubmittedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("submitted_at");

                    b.Property<string>("SubmittedBy")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("submitted_by");

                    b.Property<DateTime?>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("CaseId")
                        .HasName("PK__Cases__956FA6E99085F5FE");

                    b.HasIndex("CityId");

                    b.HasIndex("DistrictId");

                    b.HasIndex("SchoolId");

                    b.HasIndex(new[] { "AssessmentDate" }, "IX_Cases_assessment_date");

                    b.HasIndex(new[] { "DraftStatus" }, "IX_Cases_draft_status");

                    b.HasIndex(new[] { "SubmittedBy" }, "IX_Cases_submitted_by");

                    b.HasIndex(new[] { "IdNumber" }, "UQ__Cases__D58CDE11C0544CB6")
                        .IsUnique();

                    b.ToTable("Cases", t =>
                        {
                            t.HasTrigger("TR_Cases_UpdateTime");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("CanLove_Backend.Data.Models.History.CaseDetailHistory", b =>
                {
                    b.Property<long>("HistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("history_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("HistoryId"));

                    b.Property<string>("CaseId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("caseID");

                    b.Property<string>("ChangeReason")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("change_reason");

                    b.Property<string>("ChangeType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("change_type");

                    b.Property<DateTime?>("ChangedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("changed_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ChangedBy")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("changed_by");

                    b.Property<string>("FieldName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("field_name");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("ip_address");

                    b.Property<string>("NewValue")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("new_value");

                    b.Property<string>("OldValue")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("old_value");

                    b.Property<string>("UserAgent")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("user_agent");

                    b.Property<int>("VersionNumber")
                        .HasColumnType("int")
                        .HasColumnName("version_number");

                    b.HasKey("HistoryId")
                        .HasName("PK__CaseDeta__096AA2E9A69DB73B");

                    b.HasIndex("CaseId");

                    b.ToTable("CaseDetailHistory", (string)null);
                });

            modelBuilder.Entity("CanLove_Backend.Data.Models.History.CaseHistory", b =>
                {
                    b.Property<long>("HistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("history_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("HistoryId"));

                    b.Property<string>("CaseId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("caseID");

                    b.Property<string>("ChangeReason")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("change_reason");

                    b.Property<string>("ChangeType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("change_type");

                    b.Property<DateTime?>("ChangedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("changed_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ChangedBy")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("changed_by");

                    b.Property<string>("FieldName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("field_name");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("ip_address");

                    b.Property<string>("NewValue")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("new_value");

                    b.Property<string>("OldValue")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("old_value");

                    b.Property<string>("UserAgent")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("user_agent");

                    b.Property<int>("VersionNumber")
                        .HasColumnType("int")
                        .HasColumnName("version_number");

                    b.HasKey("HistoryId")
                        .HasName("PK__CaseHist__096AA2E9EAA0545B");

                    b.HasIndex("CaseId");

                    b.ToTable("CaseHistory", (string)null);
                });

            modelBuilder.Entity("CanLove_Backend.Data.Models.Options.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("city_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityId"));

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("city_name");

                    b.HasKey("CityId")
                        .HasName("PK__Cities__031491A82DDA3769");

                    b.HasIndex(new[] { "CityName" }, "UQ__Cities__1AA4F7B590443F24")
                        .IsUnique();

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("CanLove_Backend.Data.Models.Options.District", b =>
                {
                    b.Property<int>("DistrictId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("district_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DistrictId"));

                    b.Property<int>("CityId")
                        .HasColumnType("int")
                        .HasColumnName("city_id");

                    b.Property<string>("DistrictName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("district_name");

                    b.HasKey("DistrictId")
                        .HasName("PK__District__2521322B86B5E7A2");

                    b.HasIndex("CityId");

                    b.HasIndex(new[] { "DistrictName" }, "UQ__District__9E05AFF9CEDD6473")
                        .IsUnique();

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("CanLove_Backend.Data.Models.Options.FamilyStructureType", b =>
                {
                    b.Property<int>("StructureTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("structure_type_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StructureTypeId"));

                    b.Property<bool?>("NeedsDescription")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("needs_description");

                    b.Property<string>("StructureCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("structure_code");

                    b.Property<string>("StructureName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("structure_name");

                    b.HasKey("StructureTypeId")
                        .HasName("PK__FamilySt__6BBEBC67EB138E2C");

                    b.HasIndex(new[] { "StructureCode" }, "UQ__FamilySt__84CB930AE64C5F03")
                        .IsUnique();

                    b.ToTable("FamilyStructureTypes");
                });

            modelBuilder.Entity("CanLove_Backend.Data.Models.Options.Nationality", b =>
                {
                    b.Property<int>("NationalityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("nationality_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NationalityId"));

                    b.Property<string>("NationalityCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("nationality_code");

                    b.Property<string>("NationalityName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("nationality_name");

                    b.HasKey("NationalityId")
                        .HasName("PK__National__2E6444ED91C8FBA5");

                    b.HasIndex(new[] { "NationalityName" }, "UQ__National__64AF10BC33C40389")
                        .IsUnique();

                    b.HasIndex(new[] { "NationalityCode" }, "UQ__National__A22D2FE5AD603ECB")
                        .IsUnique();

                    b.ToTable("Nationalities");
                });

            modelBuilder.Entity("CanLove_Backend.Data.Models.Options.OptionSet", b =>
                {
                    b.Property<int>("OptionSetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("option_set_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OptionSetId"));

                    b.Property<string>("OptionKey")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("option_key");

                    b.Property<string>("OptionSetName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("option_set_name");

                    b.HasKey("OptionSetId")
                        .HasName("PK__OptionSe__2092EE9521649D1A");

                    b.HasIndex(new[] { "OptionKey" }, "UQ__OptionSe__C54F5DD694F6E72D")
                        .IsUnique();

                    b.ToTable("OptionSets");
                });

            modelBuilder.Entity("CanLove_Backend.Data.Models.Options.OptionSetValue", b =>
                {
                    b.Property<int>("OptionValueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("option_value_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OptionValueId"));

                    b.Property<int>("OptionSetId")
                        .HasColumnType("int")
                        .HasColumnName("option_set_id");

                    b.Property<string>("ValueCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("value_code");

                    b.Property<string>("ValueName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("value_name");

                    b.HasKey("OptionValueId")
                        .HasName("PK__OptionSe__3AAA210D287E4599");

                    b.HasIndex("OptionSetId");

                    b.ToTable("OptionSetValues");
                });

            modelBuilder.Entity("CanLove_Backend.Data.Models.Options.School", b =>
                {
                    b.Property<int>("SchoolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("school_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SchoolId"));

                    b.Property<string>("SchoolName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("school_name");

                    b.Property<string>("SchoolType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("school_type");

                    b.HasKey("SchoolId")
                        .HasName("PK__Schools__27CA6CF491635D7B");

                    b.HasIndex(new[] { "SchoolName" }, "UQ__Schools__007188191EFA6D19")
                        .IsUnique();

                    b.ToTable("Schools");
                });

            modelBuilder.Entity("CanLove_Backend.Data.Models.CaseDetails.CaseConsultationRecord", b =>
                {
                    b.HasOne("CanLove_Backend.Data.Models.Core.Case", "Case")
                        .WithMany("CaseConsultationRecords")
                        .HasForeignKey("CaseId")
                        .IsRequired()
                        .HasConstraintName("FK__CaseConsu__caseI__5BAD9CC8");

                    b.HasOne("CanLove_Backend.Data.Models.Options.OptionSetValue", "ConsultationMethodValue")
                        .WithMany("CaseConsultationRecordConsultationMethodValues")
                        .HasForeignKey("ConsultationMethodValueId")
                        .IsRequired()
                        .HasConstraintName("FK__CaseConsu__consu__5CA1C101");

                    b.HasOne("CanLove_Backend.Data.Models.Options.OptionSetValue", "ConsultationTargetValue")
                        .WithMany("CaseConsultationRecordConsultationTargetValues")
                        .HasForeignKey("ConsultationTargetValueId")
                        .IsRequired()
                        .HasConstraintName("FK__CaseConsu__consu__5D95E53A");

                    b.Navigation("Case");

                    b.Navigation("ConsultationMethodValue");

                    b.Navigation("ConsultationTargetValue");
                });

            modelBuilder.Entity("CanLove_Backend.Data.Models.CaseDetails.CaseDetail", b =>
                {
                    b.HasOne("CanLove_Backend.Data.Models.Core.Case", "Case")
                        .WithOne("CaseDetail")
                        .HasForeignKey("CanLove_Backend.Data.Models.CaseDetails.CaseDetail", "CaseId")
                        .IsRequired()
                        .HasConstraintName("FK__CaseDetai__caseI__06CD04F7");

                    b.HasOne("CanLove_Backend.Data.Models.Options.OptionSetValue", "ContactRelationValue")
                        .WithMany("CaseDetailContactRelationValues")
                        .HasForeignKey("ContactRelationValueId")
                        .HasConstraintName("FK__CaseDetai__conta__07C12930");

                    b.HasOne("CanLove_Backend.Data.Models.Options.FamilyStructureType", "FamilyStructureType")
                        .WithMany("CaseDetails")
                        .HasForeignKey("FamilyStructureTypeId")
                        .HasConstraintName("FK__CaseDetai__famil__08B54D69");

                    b.HasOne("CanLove_Backend.Data.Models.Options.OptionSetValue", "HelpExperienceValue")
                        .WithMany("CaseDetailHelpExperienceValues")
                        .HasForeignKey("HelpExperienceValueId")
                        .HasConstraintName("FK__CaseDetai__help___0E6E26BF");

                    b.HasOne("CanLove_Backend.Data.Models.Options.OptionSetValue", "MainCaregiverEduValue")
                        .WithMany("CaseDetailMainCaregiverEduValues")
                        .HasForeignKey("MainCaregiverEduValueId")
                        .HasConstraintName("FK__CaseDetai__main___0C85DE4D");

                    b.HasOne("CanLove_Backend.Data.Models.Options.OptionSetValue", "MainCaregiverMarryStatusValue")
                        .WithMany("CaseDetailMainCaregiverMarryStatusValues")
                        .HasForeignKey("MainCaregiverMarryStatusValueId")
                        .HasConstraintName("FK__CaseDetai__main___0B91BA14");

                    b.HasOne("CanLove_Backend.Data.Models.Options.Nationality", "ParentNationFather")
                        .WithMany("CaseDetailParentNationFathers")
                        .HasForeignKey("ParentNationFatherId")
                        .HasConstraintName("FK__CaseDetai__paren__09A971A2");

                    b.HasOne("CanLove_Backend.Data.Models.Options.Nationality", "ParentNationMother")
                        .WithMany("CaseDetailParentNationMothers")
                        .HasForeignKey("ParentNationMotherId")
                        .HasConstraintName("FK__CaseDetai__paren__0A9D95DB");

                    b.HasOne("CanLove_Backend.Data.Models.Options.OptionSetValue", "SourceValue")
                        .WithMany("CaseDetailSourceValues")
                        .HasForeignKey("SourceValueId")
                        .HasConstraintName("FK__CaseDetai__sourc__0D7A0286");

                    b.Navigation("Case");

                    b.Navigation("ContactRelationValue");

                    b.Navigation("FamilyStructureType");

                    b.Navigation("HelpExperienceValue");

                    b.Navigation("MainCaregiverEduValue");

                    b.Navigation("MainCaregiverMarryStatusValue");

                    b.Navigation("ParentNationFather");

                    b.Navigation("ParentNationMother");

                    b.Navigation("SourceValue");
                });

            modelBuilder.Entity("CanLove_Backend.Data.Models.CaseDetails.CaseEqemotionalEvaluation", b =>
                {
                    b.HasOne("CanLove_Backend.Data.Models.Core.Case", "Case")
                        .WithOne("CaseEqemotionalEvaluation")
                        .HasForeignKey("CanLove_Backend.Data.Models.CaseDetails.CaseEqemotionalEvaluation", "CaseId")
                        .IsRequired()
                        .HasConstraintName("FK__CaseEQemo__caseI__3E1D39E1");

                    b.Navigation("Case");
                });

            modelBuilder.Entity("CanLove_Backend.Data.Models.CaseDetails.CaseFamilyMember", b =>
                {
                    b.HasOne("CanLove_Backend.Data.Models.Core.Case", "Case")
                        .WithMany()
                        .HasForeignKey("CaseId")
                        .IsRequired()
                        .HasConstraintName("FK__CaseFamil__caseI__4E53A1AA");

                    b.HasOne("CanLove_Backend.Data.Models.Options.OptionSetValue", "MemberTypeValue")
                        .WithMany()
                        .HasForeignKey("MemberTypeValueId")
                        .IsRequired()
                        .HasConstraintName("FK__CaseFamil__membe__4F47C5E3");

                    b.Navigation("Case");

                    b.Navigation("MemberTypeValue");
                });

            modelBuilder.Entity("CanLove_Backend.Data.Models.CaseDetails.CaseFamilyMemberNote", b =>
                {
                    b.HasOne("CanLove_Backend.Data.Models.Core.Case", "Case")
                        .WithMany("CaseFamilyMemberNotes")
                        .HasForeignKey("CaseId")
                        .IsRequired()
                        .HasConstraintName("FK__CaseFamil__caseI__55009F39");

                    b.HasOne("CanLove_Backend.Data.Models.Options.OptionSetValue", "MemberTypeValue")
                        .WithMany("CaseFamilyMemberNotes")
                        .HasForeignKey("MemberTypeValueId")
                        .IsRequired()
                        .HasConstraintName("FK__CaseFamil__membe__55F4C372");

                    b.Navigation("Case");

                    b.Navigation("MemberTypeValue");
                });

            modelBuilder.Entity("CanLove_Backend.Data.Models.CaseDetails.CaseFamilySpecialStatus", b =>
                {
                    b.HasOne("CanLove_Backend.Data.Models.Core.Case", "Case")
                        .WithMany()
                        .HasForeignKey("CaseId")
                        .IsRequired()
                        .HasConstraintName("FK__CaseFamil__caseI__489AC854");

                    b.HasOne("CanLove_Backend.Data.Models.Options.OptionSetValue", "StatusTypeValue")
                        .WithMany()
                        .HasForeignKey("StatusTypeValueId")
                        .IsRequired()
                        .HasConstraintName("FK__CaseFamil__statu__498EEC8D");

                    b.Navigation("Case");

                    b.Navigation("StatusTypeValue");
                });

            modelBuilder.Entity("CanLove_Backend.Data.Models.CaseDetails.CaseFqeconomicStatus", b =>
                {
                    b.HasOne("CanLove_Backend.Data.Models.Core.Case", "Case")
                        .WithOne("CaseFqeconomicStatus")
                        .HasForeignKey("CanLove_Backend.Data.Models.CaseDetails.CaseFqeconomicStatus", "CaseId")
                        .IsRequired()
                        .HasConstraintName("FK__CaseFQeco__caseI__208CD6FA");

                    b.Navigation("Case");
                });

            modelBuilder.Entity("CanLove_Backend.Data.Models.CaseDetails.CaseHqhealthStatus", b =>
                {
                    b.HasOne("CanLove_Backend.Data.Models.Options.OptionSetValue", "CaregiverRoleValue")
                        .WithMany("CaseHqhealthStatuses")
                        .HasForeignKey("CaregiverRoleValueId")
                        .IsRequired()
                        .HasConstraintName("FK__CaseHQhea__careg__2BFE89A6");

                    b.HasOne("CanLove_Backend.Data.Models.Core.Case", "Case")
                        .WithMany("CaseHqhealthStatuses")
                        .HasForeignKey("CaseId")
                        .IsRequired()
                        .HasConstraintName("FK__CaseHQhea__caseI__2B0A656D");

                    b.Navigation("CaregiverRoleValue");

                    b.Navigation("Case");
                });

            modelBuilder.Entity("CanLove_Backend.Data.Models.CaseDetails.CaseIqacademicPerformance", b =>
                {
                    b.HasOne("CanLove_Backend.Data.Models.Core.Case", "Case")
                        .WithOne("CaseIqacademicPerformance")
                        .HasForeignKey("CanLove_Backend.Data.Models.CaseDetails.CaseIqacademicPerformance", "CaseId")
                        .IsRequired()
                        .HasConstraintName("FK__CaseIQaca__caseI__31B762FC");

                    b.Navigation("Case");
                });

            modelBuilder.Entity("CanLove_Backend.Data.Models.CaseDetails.CaseSocialWorkerContent", b =>
                {
                    b.HasOne("CanLove_Backend.Data.Models.Core.Case", "Case")
                        .WithOne("CaseSocialWorkerContent")
                        .HasForeignKey("CanLove_Backend.Data.Models.CaseDetails.CaseSocialWorkerContent", "CaseId")
                        .IsRequired()
                        .HasConstraintName("FK__CaseSocia__caseI__19DFD96B");

                    b.HasOne("CanLove_Backend.Data.Models.Options.OptionSetValue", "ResidenceTypeValue")
                        .WithMany("CaseSocialWorkerContents")
                        .HasForeignKey("ResidenceTypeValueId")
                        .HasConstraintName("FK__CaseSocia__resid__1AD3FDA4");

                    b.Navigation("Case");

                    b.Navigation("ResidenceTypeValue");
                });

            modelBuilder.Entity("CanLove_Backend.Data.Models.CaseDetails.CaseSocialWorkerService", b =>
                {
                    b.HasOne("CanLove_Backend.Data.Models.Core.Case", "Case")
                        .WithMany("CaseSocialWorkerServices")
                        .HasForeignKey("CaseId")
                        .IsRequired()
                        .HasConstraintName("FK__CaseSocia__caseI__634EBE90");

                    b.HasOne("CanLove_Backend.Data.Models.Options.OptionSetValue", "ServiceTypeValue")
                        .WithMany("CaseSocialWorkerServices")
                        .HasForeignKey("ServiceTypeValueId")
                        .IsRequired()
                        .HasConstraintName("FK__CaseSocia__servi__6442E2C9");

                    b.Navigation("Case");

                    b.Navigation("ServiceTypeValue");
                });

            modelBuilder.Entity("CanLove_Backend.Data.Models.CaseDetails.FinalAssessmentSummary", b =>
                {
                    b.HasOne("CanLove_Backend.Data.Models.Core.Case", "Case")
                        .WithOne("FinalAssessmentSummary")
                        .HasForeignKey("CanLove_Backend.Data.Models.CaseDetails.FinalAssessmentSummary", "CaseId")
                        .IsRequired()
                        .HasConstraintName("FK__FinalAsse__caseI__43D61337");

                    b.Navigation("Case");
                });

            modelBuilder.Entity("CanLove_Backend.Data.Models.Core.Case", b =>
                {
                    b.HasOne("CanLove_Backend.Data.Models.Options.City", "City")
                        .WithMany("Cases")
                        .HasForeignKey("CityId")
                        .HasConstraintName("FK__Cases__city_id__00200768");

                    b.HasOne("CanLove_Backend.Data.Models.Options.District", "District")
                        .WithMany("Cases")
                        .HasForeignKey("DistrictId")
                        .HasConstraintName("FK__Cases__district___01142BA1");

                    b.HasOne("CanLove_Backend.Data.Models.Options.School", "School")
                        .WithMany("Cases")
                        .HasForeignKey("SchoolId")
                        .HasConstraintName("FK__Cases__school_id__7F2BE32F");

                    b.Navigation("City");

                    b.Navigation("District");

                    b.Navigation("School");
                });

            modelBuilder.Entity("CanLove_Backend.Data.Models.History.CaseDetailHistory", b =>
                {
                    b.HasOne("CanLove_Backend.Data.Models.Core.Case", "Case")
                        .WithMany("CaseDetailHistories")
                        .HasForeignKey("CaseId")
                        .IsRequired()
                        .HasConstraintName("FK__CaseDetai__caseI__6BE40491");

                    b.Navigation("Case");
                });

            modelBuilder.Entity("CanLove_Backend.Data.Models.History.CaseHistory", b =>
                {
                    b.HasOne("CanLove_Backend.Data.Models.Core.Case", "Case")
                        .WithMany("CaseHistories")
                        .HasForeignKey("CaseId")
                        .IsRequired()
                        .HasConstraintName("FK__CaseHisto__caseI__681373AD");

                    b.Navigation("Case");
                });

            modelBuilder.Entity("CanLove_Backend.Data.Models.Options.District", b =>
                {
                    b.HasOne("CanLove_Backend.Data.Models.Options.City", "City")
                        .WithMany("Districts")
                        .HasForeignKey("CityId")
                        .IsRequired()
                        .HasConstraintName("FK__Districts__city___6E01572D");

                    b.Navigation("City");
                });

            modelBuilder.Entity("CanLove_Backend.Data.Models.Options.OptionSetValue", b =>
                {
                    b.HasOne("CanLove_Backend.Data.Models.Options.OptionSet", "OptionSet")
                        .WithMany("OptionSetValues")
                        .HasForeignKey("OptionSetId")
                        .IsRequired()
                        .HasConstraintName("FK__OptionSet__optio__6477ECF3");

                    b.Navigation("OptionSet");
                });

            modelBuilder.Entity("CanLove_Backend.Data.Models.Core.Case", b =>
                {
                    b.Navigation("CaseConsultationRecords");

                    b.Navigation("CaseDetail");

                    b.Navigation("CaseDetailHistories");

                    b.Navigation("CaseEqemotionalEvaluation");

                    b.Navigation("CaseFamilyMemberNotes");

                    b.Navigation("CaseFqeconomicStatus");

                    b.Navigation("CaseHistories");

                    b.Navigation("CaseHqhealthStatuses");

                    b.Navigation("CaseIqacademicPerformance");

                    b.Navigation("CaseSocialWorkerContent");

                    b.Navigation("CaseSocialWorkerServices");

                    b.Navigation("FinalAssessmentSummary");
                });

            modelBuilder.Entity("CanLove_Backend.Data.Models.Options.City", b =>
                {
                    b.Navigation("Cases");

                    b.Navigation("Districts");
                });

            modelBuilder.Entity("CanLove_Backend.Data.Models.Options.District", b =>
                {
                    b.Navigation("Cases");
                });

            modelBuilder.Entity("CanLove_Backend.Data.Models.Options.FamilyStructureType", b =>
                {
                    b.Navigation("CaseDetails");
                });

            modelBuilder.Entity("CanLove_Backend.Data.Models.Options.Nationality", b =>
                {
                    b.Navigation("CaseDetailParentNationFathers");

                    b.Navigation("CaseDetailParentNationMothers");
                });

            modelBuilder.Entity("CanLove_Backend.Data.Models.Options.OptionSet", b =>
                {
                    b.Navigation("OptionSetValues");
                });

            modelBuilder.Entity("CanLove_Backend.Data.Models.Options.OptionSetValue", b =>
                {
                    b.Navigation("CaseConsultationRecordConsultationMethodValues");

                    b.Navigation("CaseConsultationRecordConsultationTargetValues");

                    b.Navigation("CaseDetailContactRelationValues");

                    b.Navigation("CaseDetailHelpExperienceValues");

                    b.Navigation("CaseDetailMainCaregiverEduValues");

                    b.Navigation("CaseDetailMainCaregiverMarryStatusValues");

                    b.Navigation("CaseDetailSourceValues");

                    b.Navigation("CaseFamilyMemberNotes");

                    b.Navigation("CaseHqhealthStatuses");

                    b.Navigation("CaseSocialWorkerContents");

                    b.Navigation("CaseSocialWorkerServices");
                });

            modelBuilder.Entity("CanLove_Backend.Data.Models.Options.School", b =>
                {
                    b.Navigation("Cases");
                });
#pragma warning restore 612, 618
        }
    }
}
